<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" 
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.tei-c.org/ns/1.0"
    exclude-result-prefixes="xs">  
	
<!--  ================================================================================
   C Stock, S. Gregorio, 2020-06. Dernière modification : 30-06-2020.    

Cette feuille de style traite les notices de thèses françaises issus de la bibliographie nationale des thèses dans leur version de soutenance signalés dans le Sudoc en format Unimarc version XMLlisée.
  
 Différences entre TEI0 et TEI1:
      - "abstract" : dans le nouveau modèle, il doit avoir un ou plusieurs fils éléments (p, list table). Dans l'ancien, valeur textuelle.
      - "idno" identifiant de la production : dans le nouveau modèle, fils de "analytic", dans l'ancien, fils de biblStruct (après monographic)
       Ce XSL utilise la version TEI0
      - idno analytic dans biblStruct
      - abstract sans fils
      
      Modification le 25/08/2020 :
         xmlns:tei="http://www.tei-c.org/ns/1.0" devient     xmlns="http://www.tei-c.org/ns/1.0"
=======================================================================================  -->
	
 <xsl:output encoding="UTF-8" indent="yes"/>
 
  <xsl:param name="DateAcqu"/>
  <xsl:param name="today"/> <!-- Date de création de la notice Conditor = date de transformation XSLT -->
    
<xsl:template match="record">
      <TEI> 
        <text>
          <body>
            <listBibl>
              <biblFull>
                         <!-- titleStmt obligatoire ; minimum : fils title.  -->
                <titleStmt>
                  <xsl:apply-templates select="datafield[@tag='200']/subfield[@code='a']"/>
				  <xsl:if test="datafield[@tag='200']/subfield[@code='e']/text()">
				  <xsl:apply-templates select="datafield[@tag='200']/subfield[@code='e']"/></xsl:if>
                  <xsl:apply-templates select="datafield[@tag='541']/subfield[@code='a']"/>
				  <xsl:if test="datafield[@tag='541']/subfield[@code='e']/text()">
				  <xsl:apply-templates select="datafield[@tag='541']/subfield[@code='e']"/></xsl:if>
                </titleStmt>
                <editionStmt>
                     <edition> 
                	<date type="whenDownloaded"><xsl:value-of select="$DateAcqu"/></date>
                     	<date type="whenCreated"><xsl:value-of select="$today"/></date>
                  </edition>
                	<respStmt>
                		<resp>Generated by TEI-Conditor XSLT (https://github.com/conditor/tei-conditor), from original Sudoc document ppn <xsl:value-of select="//controlfield[@tag='001']"/></resp>
                		<name>Conditor</name>
                	</respStmt>
                </editionStmt>
                <publicationStmt>
                   <distributor>Conditor</distributor> 
                </publicationStmt>
	<notesStmt>
		<note type="thesisOriginal" n="1">Version de soutenance</note>
	</notesStmt>
				
                <sourceDesc>
                  <biblStruct>
                    <analytic>
                  <xsl:apply-templates select="datafield[@tag='200']/subfield[@code='a']"/>
				  <xsl:if test="datafield[@tag='200']/subfield[@code='e']/text()">
				  <xsl:apply-templates select="datafield[@tag='200']/subfield[@code='e']"/></xsl:if>
                  <xsl:apply-templates select="datafield[@tag='541']/subfield[@code='a']"/>
				  <xsl:if test="datafield[@tag='541']/subfield[@code='e']/text()">
				  <xsl:apply-templates select="datafield[@tag='541']/subfield[@code='e']"/></xsl:if>
                      <xsl:apply-templates select="datafield[@tag='700']"/>
				<xsl:if test="datafield[@tag='701']/subfield[@code='4']='070'">
					<xsl:call-template name="coauthor"/></xsl:if> 
             </analytic>
                        
            <monogr>
            	            	
            	<!--ajout SG -->
            	<xsl:for-each select="datafield[@tag='701']">
            		<xsl:if test="subfield[@code='4']!='070'">
            			<xsl:call-template name="jury"/> 
            		</xsl:if>
            	</xsl:for-each>
            	
		<!-- Pour datafield[@tag='711'] -->
			<xsl:call-template name="institution"/>
		<imprint>
			<xsl:apply-templates select="datafield[@tag='328']/subfield[@code='d']"/>
			<xsl:apply-templates select="datafield[@tag='214']/subfield[@code='d']"/>
			<xsl:apply-templates select="datafield[@tag='215']/subfield[@code='a']"/>
		</imprint>
                    </monogr>
		<xsl:apply-templates select="datafield[@tag='029']/subfield[@code='b']"/>
		<xsl:apply-templates select="controlfield[@tag='001']"/>
		<xsl:call-template name="fulltext"/>
                  </biblStruct>
                </sourceDesc>
              	
                <profileDesc>
		<langUsage>
                 		 <xsl:apply-templates select="datafield[@tag='101']/subfield[@code='a']"/>
		</langUsage>
                	
                	<textClass>
                		<!-- mots-cles auteur  ;  indexation rameau et fmesh  -->
                	<xsl:for-each select="datafield[@tag='606']">
                		<xsl:if test="subfield[@code='2']='rameau'">
                			<xsl:call-template name="rameau"/>
                		</xsl:if>
                		<xsl:if test="subfield[@code='2']='fmesh'">
                			<xsl:call-template name="fmesh"/>
                		</xsl:if>  
                	</xsl:for-each>	
                	<xsl:apply-templates select="datafield[@tag='610']"/>
                		<!--  classifications TEF et dewey  -->
                	<xsl:apply-templates select="datafield[@tag='686']/subfield[@code='a']"/>
                	<xsl:apply-templates select="datafield[@tag='676']/subfield[@code='a']"/>	
                		<!--  type et discipline de thèse  -->
                	<xsl:apply-templates select="datafield[@tag='328']/subfield[@code='c']"/>
                	<xsl:apply-templates select="datafield[@tag='328']/subfield[@code='b']"/>  
		</textClass>
                	<!--  abstract  	<abstract xml:lang=""  --> 
                	<xsl:apply-templates select="datafield[@tag='330']"/> 
		</profileDesc>                       
	 </biblFull>
    </listBibl></body></text></TEI>
</xsl:template>
 
 <!--     BEGIN  TEMPLATES   -->
<!-- Titre(s) --> 
<xsl:template match="datafield[@tag='200']/subfield[@code='a']"> 
	<xsl:element name="title">
		<xsl:attribute name="xml:lang">
			<xsl:value-of select="substring(//datafield[@tag='101']/subfield[@code='a'],1,2)"/>
		</xsl:attribute>
		<xsl:apply-templates/>
	</xsl:element>
</xsl:template>

<xsl:template match="datafield[@tag='200']/subfield[@code='e']">
	<xsl:element name="title">		
		<xsl:attribute name="type">sub</xsl:attribute>
		<xsl:attribute name="xml:lang">
			<xsl:value-of select="substring(//datafield[@tag='101']/subfield[@code='a'],1,2)"/></xsl:attribute>
		<xsl:apply-templates/>
	  </xsl:element>
</xsl:template>

<xsl:template match="datafield[@tag='541']/subfield[@code='a']">
	<xsl:element name="title">
		<xsl:attribute name="xml:lang">
			<xsl:value-of select="substring(//subfield[@code='z'],1,2)"/>
		</xsl:attribute>
		<xsl:apply-templates/>
	</xsl:element>
</xsl:template>
<xsl:template match="datafield[@tag='541']/subfield[@code='e']">
	<xsl:element name="title">
		<xsl:attribute name="type">sub</xsl:attribute>
		<xsl:attribute name="xml:lang">
			<xsl:value-of select="substring(//subfield[@code='z'],1,2)"/>
		</xsl:attribute>		
		<xsl:apply-templates/>
	</xsl:element>
</xsl:template>

<!--  auteur -->
<xsl:template match="datafield[@tag='700']">
	<author role="aut">
		<persName>
			<forename>	   
				<xsl:value-of select="./subfield[@code='b']"/>
			</forename>
			<surname>
				<xsl:value-of select="./subfield[@code='a']"/>
			</surname>
		</persName>
        	<idno type="idRef">
        		<xsl:value-of select="./subfield[@code='3']"/>
	</idno>
	</author>
</xsl:template>  

<!-- co_auteur en 701  --> 
<xsl:template name="coauthor">
	<author role="aut">
		<persName>
			<forename>	   
				<xsl:value-of select="//datafield[@tag='701']/subfield[@code='b']"/>
			</forename>
			<surname>
				<xsl:value-of select="//datafield[@tag='701']/subfield[@code='a']"/>
			</surname>
		</persName>
        <idno type="idRef">
        	<xsl:value-of select="//datafield[@tag='701']/subfield[@code='3']"/>
		</idno>
	</author>
</xsl:template>  

<!--  Membres du jury  -->
<xsl:template name="jury">
	<xsl:element name="editor">
		<xsl:attribute name="role">
		<xsl:choose>
			<xsl:when test="./subfield[@code='4']='727'">
				<xsl:text>ths</xsl:text>	</xsl:when>
			<xsl:when test="./subfield[@code='4']='555'">
				<xsl:text>opn</xsl:text>	</xsl:when>
			<xsl:when test="./subfield[@code='4']='958'">
				<xsl:text>thr</xsl:text>	</xsl:when>
			<xsl:when test="./subfield[@code='4']='956'">
				<xsl:text>pra</xsl:text>	</xsl:when>
		</xsl:choose>
		</xsl:attribute>
		<persName>
			<forename>	   
				<xsl:value-of select="./subfield[@code='b']"/>
			</forename>
			<surname>
				<xsl:value-of select="./subfield[@code='a']"/>
			</surname>
		</persName>
       	 	<idno type="idRef">
        			<xsl:value-of select="./subfield[@code='3']"/>
		</idno>
	  </xsl:element>
</xsl:template>  
	
	<!--  Etablissement de soutenance, école doctorale, laboratoire d'accueil, etc  -->
<xsl:template name="institution">
	<xsl:for-each select="datafield[@tag='711']">
		<xsl:element name="editor">
		<xsl:attribute name="role">
		<xsl:choose>
			<xsl:when test="./subfield[@code='4']='295'">
				<xsl:text>dgg</xsl:text>	</xsl:when>
			<xsl:when test="./subfield[@code='4']='995'">
				<xsl:text>dcg</xsl:text>	</xsl:when>
			<xsl:when test="./subfield[@code='4']='996'">
				<xsl:text>dos</xsl:text>	</xsl:when>	
			<xsl:when test="./subfield[@code='4']='981'">
				<xsl:text>tal</xsl:text>	</xsl:when>
			<xsl:when test="./subfield[@code='4']='984'">
				<xsl:text>tar</xsl:text>	</xsl:when>
		</xsl:choose>
		</xsl:attribute>
		<orgName type="institution">
				<xsl:value-of select="./subfield[@code='a']"/>
		</orgName >	
		<xsl:if test="./subfield[@code='b']/text()">
			<orgName type="laboratory">
				<xsl:value-of select="./subfield[@code='b']"/>
			</orgName >
		</xsl:if>
       	 	<idno type="idRef">
        			<xsl:value-of select="./subfield[@code='3']"/>
		</idno>
	</xsl:element>
	</xsl:for-each>
</xsl:template>
	
<!-- bloc imprint  -->
<xsl:template match="datafield[@tag='328']/subfield[@code='d']">
  <xsl:if test="position()=1">
	<date type="dateDefended">
		<xsl:apply-templates/> 
	</date>
  </xsl:if>
</xsl:template>

<xsl:template match="datafield[@tag='214']/subfield[@code='d']">
	<date type="whenProduced">
		<xsl:apply-templates/>
	</date>
</xsl:template>
	
<xsl:template match="datafield[@tag='215']/subfield[@code='a']">
	<biblScope unit="pagesNo">
		<xsl:apply-templates/>
	</biblScope>
</xsl:template>

	<!-- bloc identifier -->
<xsl:template match="controlfield[@tag='001']">
	<idno type="ppnSudoc">
		<xsl:apply-templates/>
	</idno>
</xsl:template>

	<!-- nouveau contrôle : si le NNT contient moins de 12 positions, il est ignoré  (pour éviter les nnt tronqués type 2014ROUEM ou 2014POITMO  qui risqueraient de créer des faux doublons  -->
<xsl:template match="datafield[@tag='029']/subfield[@code='b']">
	<xsl:if test="string-length(.)=12">
	<idno type="nnt">
		<xsl:apply-templates/>
	</idno>
	</xsl:if>
</xsl:template>

<xsl:template match="datafield[@tag='101']/subfield[@code='a']">
	<xsl:element name="language">
		<xsl:attribute name="ident">
		<xsl:value-of select="substring(.,1,2)"/>
		</xsl:attribute>  
	</xsl:element>
</xsl:template>

	<!--  link to fulltext  -->
<xsl:template name="fulltext">
	<xsl:if test="datafield[@tag='856']/subfield[@code='q']='PDF'">
		<ref type="file" n="1">
			<xsl:attribute name="target">
				<xsl:value-of select="datafield[@tag='856']/subfield[@code='u']"/>
			</xsl:attribute>
		</ref>
	</xsl:if>
</xsl:template>

	<!--  KEYWORDS  -->
	
	<!-- Ajout SG -->
<xsl:template name="rameau">
	<keywords scheme="rameau">
		<term xml:lang="fr" type="topicalName" ref="https://www.idref.fr/{subfield[@code='a']/preceding-sibling::subfield[@code='3'][1]}">
			<term>
				<xsl:value-of select="subfield[@code='a']"/>
			</term>
			<xsl:if test="subfield[@code='a']/preceding-sibling::subfield[@code='3'][1]">
				<idno type="idRef">
					<xsl:value-of select="subfield[@code='a']/preceding-sibling::subfield[@code='3'][1]"/>
				</idno>
			</xsl:if>
		</term>
			
	<!-- plutôt utiliser des if au lieu de "choose" -->
		<xsl:if test="subfield[@code='x']">
			<term xml:lang="fr" type="subdivisionTopic" ref="https://www.idref.fr/{subfield[@code='x']/preceding-sibling::subfield[@code='3'][1]}">
				<term>
					<xsl:value-of select="subfield[@code='x']"/>
				</term>
				<xsl:if test="subfield[@code='x']/preceding-sibling::subfield[@code='3'][1]">
					<idno type="idRef">
						<xsl:value-of select="subfield[@code='x']/preceding-sibling::subfield[@code='3'][1]"/>
					</idno>
				</xsl:if>
			</term>	
		</xsl:if>
		<xsl:if test="subfield[@code='y']">
			<term xml:lang="fr" type="subdivisionGeo" ref="https://www.idref.fr/{subfield[@code='y']/preceding-sibling::subfield[@code='3'][1]}">
				<term>
					<xsl:value-of select="subfield[@code='y']"/>
				</term>
				<xsl:if test="subfield[@code='y']/preceding-sibling::subfield[@code='3'][1]">
					<idno type="idRef">
						<xsl:value-of select="subfield[@code='y']/preceding-sibling::subfield[@code='3'][1]"/>
					</idno>
				</xsl:if>
			</term>		
		</xsl:if>
		<xsl:if test="subfield[@code='z']">
			<term xml:lang="fr" type="subdivisionChrono" ref="https://www.idref.fr/{subfield[@code='z']/preceding-sibling::subfield[@code='3'][1]}">
				<term>
					<xsl:value-of select="subfield[@code='z']"/>
				</term>
				<xsl:if test="subfield[@code='z']/preceding-sibling::subfield[@code='3'][1]">
					<idno type="idRef">
						<xsl:value-of select="subfield[@code='z']/preceding-sibling::subfield[@code='3'][1]"/>
					</idno>
				</xsl:if>
			</term>		
		</xsl:if>
	</keywords>
</xsl:template>
<xsl:template name="fmesh">
	<keywords scheme="fmesh">
		<term xml:lang="fr" type="topicalName" ref="https://www.idref.fr/{subfield[@code='a']/preceding-sibling::subfield[@code='3'][1]}">
			<term>
				<xsl:value-of select="subfield[@code='a']"/>
			</term>
			<xsl:if test="subfield[@code='a']/preceding-sibling::subfield[@code='3'][1]">
				<idno type="idRef">
					<xsl:value-of select="subfield[@code='a']/preceding-sibling::subfield[@code='3'][1]"/>
				</idno>
			</xsl:if>
		</term>
		<!-- plutôt utiliser des if au lieu de "choose" -->
		<xsl:if test="subfield[@code='x']">
			<term xml:lang="fr" type="subdivisionTopic" ref="https://www.idref.fr/{subfield[@code='x']/preceding-sibling::subfield[@code='3'][1]}">
				<term>
					<xsl:value-of select="subfield[@code='x']"/>
				</term>
				<xsl:if test="subfield[@code='x']/preceding-sibling::subfield[@code='3'][1]">
					<idno type="idRef">
						<xsl:value-of select="subfield[@code='x']/preceding-sibling::subfield[@code='3'][1]"/>
					</idno>
				</xsl:if>
			</term>	
		</xsl:if>
		<xsl:if test="subfield[@code='y']">
			<term xml:lang="fr" type="subdivisionGeo" ref="https://www.idref.fr/{subfield[@code='y']/preceding-sibling::subfield[@code='3'][1]}">
				<term>
					<xsl:value-of select="subfield[@code='y']"/>
				</term>
				<xsl:if test="subfield[@code='y']/preceding-sibling::subfield[@code='3'][1]">
					<idno type="idRef">
						<xsl:value-of select="subfield[@code='y']/preceding-sibling::subfield[@code='3'][1]"/>
					</idno>
				</xsl:if>
			</term>		
		</xsl:if>
		<xsl:if test="subfield[@code='z']">
			<term xml:lang="fr" type="subdivisionChrono" ref="https://www.idref.fr/{subfield[@code='z']/preceding-sibling::subfield[@code='3'][1]}">
				<term>
					<xsl:value-of select="subfield[@code='z']"/>
				</term>
				<xsl:if test="subfield[@code='z']/preceding-sibling::subfield[@code='3'][1]">
					<idno type="idRef">
						<xsl:value-of select="subfield[@code='z']/preceding-sibling::subfield[@code='3'][1]"/>
					</idno>
				</xsl:if>
			</term>		
		</xsl:if>
	</keywords>
</xsl:template>

<!-- mots-clés auteur  -->
<xsl:template match="datafield[@tag='610']">
	<xsl:for-each select="./subfield[@code='a']">
		<keywords scheme="author">
			<term>
				<xsl:apply-templates/>
			</term>
		</keywords>
	</xsl:for-each>
</xsl:template>

	<!--  classifications type TEF et Dewey  -->
<xsl:template match="datafield[@tag='686']/subfield[@code='a']">
	<classCode scheme="TEF">
		<xsl:apply-templates/>
	</classCode>
</xsl:template>
	
<xsl:template match="datafield[@tag='676']/subfield[@code='a']">
	<classCode scheme="Dewey">
		<xsl:apply-templates/>
	</classCode>
</xsl:template>
	
	<!--  Type de thèse et domaine scientifique de thèse  -->
<xsl:template match="datafield[@tag='328']/subfield[@code='c']">
	<xsl:if test="position()=1">
	<classCode scheme="thesisDomain">
		<xsl:apply-templates/>
	</classCode>
	</xsl:if>
</xsl:template>
	
<xsl:template match="datafield[@tag='328']/subfield[@code='b']">
	<xsl:if test="position()=1">
	<classCode scheme="typology">
		<xsl:apply-templates/>
	</classCode>
	</xsl:if>
</xsl:template>

<!--   ABSTRACT  -->
<xsl:template match="datafield[@tag='330']">
	<xsl:choose>
		<xsl:when test="position()=1">
			<abstract xml:lang="fr">
				<xsl:value-of select="./subfield[@code='a']"/>
			</abstract>
		</xsl:when>
		<xsl:otherwise>
			<xsl:element name="abstract">
			<xsl:attribute name="xml:lang">
				<xsl:value-of select="substring(//datafield[@tag='101']/subfield[@code='d'][2],1,2)"/>
			</xsl:attribute>
				<xsl:value-of select="./subfield[@code='a']"/>
			</xsl:element>
		</xsl:otherwise>
	</xsl:choose>
</xsl:template>
                		
</xsl:stylesheet>